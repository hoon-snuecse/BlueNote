name: Render and Publish Quarto Website

on:
  push:
    branches: main

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 전체 히스토리를 가져와서 파일 변경 감지 개선

      - name: Check for files requiring R
        id: check_r_files
        run: |
          # R 코드가 포함된 파일들 확인
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ] || [ -z "${{ github.event.before }}" ]; then
            # 초기 푸시이거나 before가 없는 경우 모든 파일 확인
            if find . -name "*.qmd" -exec grep -l "engine.*r\|```{r" {} \; | head -1 | grep -q .; then
              echo "r_files_changed=true" >> $GITHUB_OUTPUT
            else
              echo "r_files_changed=false" >> $GITHUB_OUTPUT
            fi
          else
            # 변경된 파일들 중에서 R 코드가 있는지 확인
            if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | xargs -I {} sh -c 'test -f "{}" && (echo "{}" | grep -q "\.qmd$" && grep -l "engine.*r\|```{r" "{}" || echo "{}" | grep -q "\.r$\|\.R$")' | head -1 | grep -q .; then
              echo "r_files_changed=true" >> $GITHUB_OUTPUT
            else
              echo "r_files_changed=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Check for files requiring Python
        id: check_py_files
        run: |
          # Python 코드가 포함된 파일들 확인
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ] || [ -z "${{ github.event.before }}" ]; then
            # 초기 푸시이거나 before가 없는 경우 모든 파일 확인
            if find . -name "*.qmd" -exec grep -l "engine.*python\|```{python" {} \; | head -1 | grep -q . || find . -name "*.py" | head -1 | grep -q .; then
              echo "py_files_changed=true" >> $GITHUB_OUTPUT
            else
              echo "py_files_changed=false" >> $GITHUB_OUTPUT
            fi
          else
            # 변경된 파일들 중에서 Python 코드가 있는지 확인
            if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | xargs -I {} sh -c 'test -f "{}" && (echo "{}" | grep -q "\.qmd$" && grep -l "engine.*python\|```{python" "{}" || echo "{}" | grep -q "\.py$")' | head -1 | grep -q .; then
              echo "py_files_changed=true" >> $GITHUB_OUTPUT
            else
              echo "py_files_changed=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        if: steps.check_py_files.outputs.py_files_changed == 'true'
        with:
          python-version: '3.13'

      - name: Install Python dependencies
        if: steps.check_py_files.outputs.py_files_changed == 'true'
        run: |
          python -m pip install --upgrade pip
          # Quarto의 Python 코드 실행에 필수적인 Jupyter 관련 패키지들
          python -m pip install ipykernel pyyaml nbformat jupyter_client jupyter_core
          # 데이터 과학 및 머신러닝 라이브러리들
          python -m pip install pandas scikit-learn numpy matplotlib seaborn plotly
          # 추가 라이브러리가 필요한 경우 여기에 추가

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        if: steps.check_r_files.outputs.r_files_changed == 'true'
        with:
          r-version: '4.x'

      - name: Install R dependencies
        if: steps.check_r_files.outputs.r_files_changed == 'true'
        run: |
          R -e 'install.packages(c("tidyverse", "caret", "tidymodels", "rmarkdown", "knitr"))'

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Render Quarto project
        run: quarto render

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site  # Quarto 기본 출력 디렉토리